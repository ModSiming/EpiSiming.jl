var documenterSearchIndex = {"docs":
[{"location":"examples/random_scenario.html#Epidemic-simulation-via-a-discrete-time,-agent-based-stochastic-model-with-a-random-scenario","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"","category":"section"},{"location":"examples/random_scenario.html#Introduction","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Introduction","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"We construct, here, the scenario for an epidemics, in which the population is composed of a number of agents (or individuals), aggregated into residences, and interacting with each other within the residences and through the following structures:","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"clusters of school and workplaces,\nnetworks of social and commerce connections; and\ncausual encounters with the general population.","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"In the current example, we build a random scenario, in a rectangular region.","category":"page"},{"location":"examples/random_scenario.html#Loading-packages","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Loading packages","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"using Random\n\nusing SparseArrays\n\nusing StatsBase\nusing Distributions\n\nusing Plots\nusing StatsPlots: groupedbar\n\nusing EpiSiming\n\n#=\nusing Graphs\nusing Graphs\nusing GraphPlot\n=#","category":"page"},{"location":"examples/random_scenario.html#Building-the-Scenario","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Building the Scenario","text":"","category":"section"},{"location":"examples/random_scenario.html#Set-global-parameters","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Set global parameters","text":"","category":"section"},{"location":"examples/random_scenario.html#Population-number","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Population number","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"num_population = 10_000","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"10000","category":"page"},{"location":"examples/random_scenario.html#Region-size","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Region size","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"region_size = (6, 12)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(6, 12)","category":"page"},{"location":"examples/random_scenario.html#Distribution-of-residences-per-size","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Distribution of residences per size","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"res_size_distribution = [10, 22, 33, 22, 5, 5, 2, 1] |> v -> Weights(v / sum(v))","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"8-element StatsBase.Weights{Float64, Float64, Vector{Float64}}:\n 0.1\n 0.22\n 0.33\n 0.22\n 0.05\n 0.05\n 0.02\n 0.01","category":"page"},{"location":"examples/random_scenario.html#Susceptibility-and-infectivity-parameters","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Susceptibility and infectivity parameters","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Parameters of the Gamma distribution for the susceptibility and infectivity factors","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Γ = (\n    sus_shape = 2.0,\n    sus_scale = 0.5,\n    inf_shape = 4.0,\n    inf_scale= 0.25\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(sus_shape = 2.0, sus_scale = 0.5, inf_shape = 4.0, inf_scale = 0.25)","category":"page"},{"location":"examples/random_scenario.html#Age-pyramid","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Age pyramid","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"pop_pyramid = let age_max = 100, p = 2, pyramid_func(a, age_max, p) = ( a + 1 ) * (age_max - a)^p\n    Weights(\n        pyramid_func.(0:age_max, age_max, p) / sum(pyramid_func.(0:age_max, age_max, p))\n    )\nend","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"101-element StatsBase.Weights{Float64, Float64, Vector{Float64}}:\n 0.0011532894698904953\n 0.0022606780188793485\n 0.0033228576206484946\n 0.004340520248879868\n 0.005314357877255402\n 0.006245062479457031\n 0.0071333260291666905\n 0.007979840500066315\n 0.008785297865837836\n 0.00955039010016319\n ⋮\n 0.0006864378924788228\n 0.000531205129831562\n 0.00039442499870254936\n 0.0002767894727737188\n 0.00017899052572700484\n 0.00010172013124434167\n 4.567026300766361e-5\n 1.1532894698904952e-5\n 0.0","category":"page"},{"location":"examples/random_scenario.html#Contact-rates","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Contact rates","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"τ = Dict{Symbol, Float64}(\n    :residences => 0.3,\n    :work_places => 0.1,\n    :school_places => 0.2\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Dict{Symbol, Float64} with 3 entries:\n  :work_places   => 0.1\n  :school_places => 0.2\n  :residences    => 0.3","category":"page"},{"location":"examples/random_scenario.html#Recovery-rates","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Recovery rates","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"γ = (\n    rate_expos = 0.25, # rate out of exposed\n    rate_infec = 0.1, # rate out of infected\n    rate_asymp = 0.2 # rate out of asymptomatic\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(rate_expos = 0.25, rate_infec = 0.1, rate_asymp = 0.2)","category":"page"},{"location":"examples/random_scenario.html#Fate-probabilities","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Fate probabilities","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"prob = (\n    asymp = 0.6, # probability of becoming asymptomatic (vs. symptomatic = infected)\n    decease = 0.02 # probability of deceasing\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(asymp = 0.6, decease = 0.02)","category":"page"},{"location":"examples/random_scenario.html#Random-number-generator","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Random number generator","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Set random number generator for repeatability in testings","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"rng = MersenneTwister(123)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"MersenneTwister(123)","category":"page"},{"location":"examples/random_scenario.html#Generating-scenario","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Generating scenario","text":"","category":"section"},{"location":"examples/random_scenario.html#Generating-a-random-matrix-of-blocks-with-the-population-divided-per-block","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Generating a random matrix of blocks with the population divided per block","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"pop_blocks = EpiSiming.gen_random_pop_blocks(rng, num_population, region_size)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"6×12 Matrix{Int64}:\n 265  118  124   93  209   71  256  182  230   16  150   25\n  99  250   29  252  252  154  113  118  182  108  267  196\n  75   78  163  233   14  207   71  234  208  186  158  211\n 134  151   26   40   27  164    4   86   73   73  179  225\n 175   10   81   75  197  184   71  242   35   60  108  150\n 140  152  252  114  235   98   20  252   88   55  275  152","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Heatmap","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"display(\n    heatmap(\n        pop_blocks,\n        c = cgrad([:white, :orange, :red]),\n        annotate = [\n            (j, i, text(pop_blocks[i, j], 8, :black, :center))\n            for i in 1:size(pop_blocks, 1) for j in 1:size(pop_blocks, 2)\n        ],\n        xlabel = \"km\",\n        ylabel = \"km\",\n        title = \"Distribution per block of the $num_population area residents\",\n        titlefont = 10\n    )\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: )","category":"page"},{"location":"examples/random_scenario.html#Generating-residences-per-block","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Generating residences per block","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"res_blocks_distrib = EpiSiming.gen_res_blocks(rng, pop_blocks, res_size_distribution)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"6×12 Matrix{Vector{Int64}}:\n [10, 22, 28, 19, 4, 4, 1, 0]  …  [1, 3, 2, 3, 0, 0, 0, 0]\n [5, 9, 12, 6, 2, 1, 0, 0]        [6, 14, 22, 14, 3, 3, 1, 0]\n [4, 7, 7, 5, 2, 1, 0, 0]         [6, 15, 23, 15, 3, 4, 1, 0]\n [5, 11, 15, 10, 2, 2, 0, 0]      [8, 20, 24, 15, 4, 3, 1, 0]\n [6, 14, 19, 12, 2, 2, 2, 0]      [5, 12, 16, 11, 2, 2, 1, 0]\n [8, 9, 16, 11, 2, 2, 0, 0]    …  [5, 10, 16, 11, 2, 3, 1, 0]","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Visualizations","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"display(\n    groupedbar(\n        [res_size_distribution sum(res_blocks_distrib) /\n            sum(Iterators.flatten(res_blocks_distrib))],\n        xticks = eachindex(res_size_distribution),\n        bar_position = :dodge,\n        bar_width = 0.7,\n        label = [\"target\" \"generated\"],\n        xlabel = \"residence size\",\n        ylabel = \"fraction of residences\",\n        title = \"distribution of residences per size\",\n        titlefont = 10\n    )\n)\n\ndisplay(\n    histogram(\n        reshape(pop_blocks ./ map(sum, res_blocks_distrib), :, 1),\n        bins = firstindex(res_size_distribution):0.1:lastindex(res_size_distribution),\n        label = nothing,\n        xlabel = \"ratio of residents per residence\",\n        ylabel = \"number of blocks\",\n        title = \"Distribution of the number of blocks per average residence size\" *\n            \"\\nMean of the blocks average size: \" * \n            \"$(round(mean(pop_blocks ./ map(sum, res_blocks_distrib)), digits = 2))\",\n        titlefont = 10\n    )\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: ) (Image: )","category":"page"},{"location":"examples/random_scenario.html#Generating-the-list-of-residences-with-all-the-required-information","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Generating the list of residences with all the required information","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"residences = EpiSiming.gen_residences(rng, res_blocks_distrib)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"3318-element EpiSiming.Residences{Int64, Float64}:\n (1, (1.5555555555555556, 1.3888888888888888), 1, [1])\n (1, (1.5, 1.0), 1, [2])\n (1, (1.5, 1.5), 1, [3])\n (1, (1.7222222222222223, 1.2222222222222223), 1, [4])\n (1, (1.9444444444444444, 1.5), 1, [5])\n (1, (1.3333333333333333, 1.7777777777777777), 1, [6])\n (1, (1.5555555555555556, 1.0555555555555556), 1, [7])\n (1, (1.5555555555555556, 1.2777777777777777), 1, [8])\n (1, (1.6111111111111112, 1.6111111111111112), 1, [9])\n (1, (1.7222222222222223, 1.7222222222222223), 1, [10])\n ⋮\n (72, (6.083333333333333, 12.25), 4, [9954, 9955, 9956, 9957])\n (72, (6.666666666666667, 12.916666666666666), 4, [9958, 9959, 9960, 9961])\n (72, (6.083333333333333, 12.5), 4, [9962, 9963, 9964, 9965])\n (72, (6.916666666666667, 12.5), 5, [9966, 9967, 9968, 9969, 9970])\n (72, (6.166666666666667, 12.5), 5, [9971, 9972, 9973, 9974, 9975])\n (72, (6.083333333333333, 12.916666666666666), 6, [9976, 9977, 9978, 9979, \n9980, 9981])\n (72, (6.5, 12.75), 6, [9982, 9983, 9984, 9985, 9986, 9987])\n (72, (6.083333333333333, 12.75), 6, [9988, 9989, 9990, 9991, 9992, 9993])\n (72, (6.916666666666667, 12.583333333333334), 7, [9994, 9995, 9996, 9997, \n9998, 9999, 10000])","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Visualizations","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"display(\n    scatter(\n        residences.position,\n        markersize = 2,\n        markerstrokecolor = :auto,\n        label = false,\n        xlabel = \"km\",\n        ylabel = \"km\",\n        title = \"Residences\",\n        titlefont = 10\n    )\n)\n\ndisplay(\n    scatter(\n        filter( p -> (2.0 ≤ first(p) ≤ 3.0) && (2.0 ≤ last(p) ≤ 3.0), residences.position),\n        markersize = 2,\n        markerstrokecolor = :auto,\n        label = false,\n        xlabel = \"km\",\n        ylabel = \"km\",\n        title = \"Residences\",\n        titlefont = 10\n    )\n)\n\ndisplay(\n    scatter(\n        filter( p -> (2.0 ≤ first(p) ≤ 2.2) && (2.0 ≤ last(p) ≤ 2.2), residences.position),\n        markersize = 2,\n        markerstrokecolor = :auto,\n        label = false,\n        xlabel = \"km\",\n        ylabel = \"km\",\n        title = \"Residences\",\n        titlefont = 10\n    )\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: ) (Image: ) (Image: )","category":"page"},{"location":"examples/random_scenario.html#Generating-population","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Generating population","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"population = EpiSiming.gen_population(\n    rng,\n    residences,\n    res_blocks_distrib,\n    Γ,\n    pop_pyramid\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"10000-element EpiSiming.Population{EpiSiming.Phase, Int64, Int64, Float64, \nInt8, Float64, Symbol}:\n (S, 1, (E, 9223372036854775807), 1, (1.5694444444444444, 1.388888888888888\n8), 64, 0.8429668909281123, 1.0871421914278978, Dict{Symbol, Int64}(), Dict\n{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 2, (1.5138888888888888, 1.0), 34, 0.63460\n32739780121, 0.9288554210581556, Dict{Symbol, Int64}(), Dict{Symbol, Int64}\n())\n (S, 1, (E, 9223372036854775807), 3, (1.5138888888888888, 1.5), 29, 1.86613\n6384893467, 0.6379958240264992, Dict{Symbol, Int64}(), Dict{Symbol, Int64}(\n))\n (S, 1, (E, 9223372036854775807), 4, (1.7361111111111112, 1.222222222222222\n3), 21, 1.9630070493538805, 0.49089045628844613, Dict{Symbol, Int64}(), Dic\nt{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 5, (1.9583333333333333, 1.5), 11, 0.17974\n072857925905, 0.9196908284361106, Dict{Symbol, Int64}(), Dict{Symbol, Int64\n}())\n (S, 1, (E, 9223372036854775807), 6, (1.347222222222222, 1.7777777777777777\n), 18, 0.8018440204599591, 0.8572836161482715, Dict{Symbol, Int64}(), Dict{\nSymbol, Int64}())\n (S, 1, (E, 9223372036854775807), 7, (1.5694444444444444, 1.055555555555555\n6), 46, 0.7121991800323644, 1.4273823226339426, Dict{Symbol, Int64}(), Dict\n{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 8, (1.5694444444444444, 1.277777777777777\n7), 47, 0.7803803598677808, 0.7458566679008322, Dict{Symbol, Int64}(), Dict\n{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 9, (1.625, 1.6111111111111112), 84, 0.753\n3507391116316, 1.0597501527579962, Dict{Symbol, Int64}(), Dict{Symbol, Int6\n4}())\n (S, 1, (E, 9223372036854775807), 10, (1.7361111111111112, 1.72222222222222\n23), 47, 1.0583784725947785, 0.6163376056877701, Dict{Symbol, Int64}(), Dic\nt{Symbol, Int64}())\n ⋮\n (S, 1, (E, 9223372036854775807), 3317, (6.072916666666666, 12.731957804087\n823), 39, 0.7425559871162212, 1.878529197903739, Dict{Symbol, Int64}(), Dic\nt{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 3317, (6.09375, 12.731957804087823), 74, \n1.3467418715174564, 0.6158224898743601, Dict{Symbol, Int64}(), Dict{Symbol,\n Int64}())\n (S, 1, (E, 9223372036854775807), 3318, (6.9375, 12.583333333333334), 21, 0\n.5713254684769675, 1.2604338561736381, Dict{Symbol, Int64}(), Dict{Symbol, \nInt64}())\n (S, 1, (E, 9223372036854775807), 3318, (6.929656037538724, 12.599621489218\n084), 63, 0.71166954083545, 0.6573989249359745, Dict{Symbol, Int64}(), Dict\n{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 3318, (6.91203081387591, 12.6036443315037\n89), 35, 0.9299123501842387, 0.5603267260793015, Dict{Symbol, Int64}(), Dic\nt{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 3318, (6.8978964819187, 12.59237257789828\n3), 8, 0.3495478705397754, 0.7703472343146436, Dict{Symbol, Int64}(), Dict{\nSymbol, Int64}())\n (S, 1, (E, 9223372036854775807), 3318, (6.8978964819187, 12.57429408876838\n5), 22, 0.6946812843355863, 2.073824042353887, Dict{Symbol, Int64}(), Dict{\nSymbol, Int64}())\n (S, 1, (E, 9223372036854775807), 3318, (6.91203081387591, 12.5630223351628\n79), 24, 1.1293777785439765, 1.4010740192330449, Dict{Symbol, Int64}(), Dic\nt{Symbol, Int64}())\n (S, 1, (E, 9223372036854775807), 3318, (6.929656037538724, 12.567045177448\n584), 62, 0.8959454204650464, 1.9864694366090996, Dict{Symbol, Int64}(), Di\nct{Symbol, Int64}())","category":"page"},{"location":"examples/random_scenario.html#Susceptibility-distribution","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Susceptibility distribution","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"display(\n    scatter(\n        population.susceptibility,\n        title = \"Susceptibility (gamma distribution with mean $(Γ.sus_shape * Γ.sus_scale))\",\n        titlefont = 10,\n        label = nothing,\n        xlabel = \"sample of population\",\n        ylabel = \"susceptibility\"\n    )\n)\n\nlet bins = 100, interval = extrema(population.susceptibility) |>  u -> u[2] - u[1]\n    plt = histogram(\n        population.susceptibility,\n        bins = bins,\n        label = \"generated\",\n        title = \"susceptibility histogram\",\n        titlefont = 10,\n        xlabel = \"susceptibility\",\n        ylabel = \"population\"\n    )\n    plot!(\n        plt,\n        x -> (num_population * interval / bins + 1) *\n            Distributions.pdf(Distributions.Gamma(Γ.sus_shape, Γ.sus_scale), x),\n            label = \"target (Gamma distribution)\"\n    )\n    display(plt)\nend","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: ) (Image: )","category":"page"},{"location":"examples/random_scenario.html#Infectivity","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Infectivity","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"display(\n    scatter(\n        population.infectivity,\n        title = \"Infectivity (gamma distribution with mean $(Γ.inf_shape * Γ.inf_scale))\",\n        titlefont = 10,\n        label = nothing,\n        xlabel = \"sample of population\",\n        ylabel = \"infectivity\"\n    )\n)\n\nlet bins = 100, interval = extrema(population.infectivity) |>  u -> u[2] - u[1]\n    plt = histogram(\n        population.infectivity,\n        bins = bins,\n        label = \"generated\",\n        title = \"infectivity histogram\",\n        titlefont = 10,\n        xlabel = \"infectivity\",\n        ylabel = \"population\"\n    )\n\n    plot!(\n        plt,\n        x -> (num_population * interval / bins + 1) *\n            Distributions.pdf(Distributions.Gamma(Γ.inf_shape, Γ.inf_scale), x),\n        label = \"target (Gamma distribution)\"\n    )\n    display(plt)\nend","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: ) (Image: )","category":"page"},{"location":"examples/random_scenario.html#Age-distribution","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Age distribution","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"plt = histogram(\n    population.age,\n    bins = length(pop_pyramid) + 1,\n    label = \"generated\",\n    title = \"Age pyramid\",\n    titlefont = 10,\n    xlabel = \"age\",\n    ylabel = \"individuals\"\n)\n\nplot!(plt, 0:length(pop_pyramid) - 1, num_population * pop_pyramid, label = \"target\")\ndisplay(plt)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: )","category":"page"},{"location":"examples/random_scenario.html#Agents-location","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Agents location","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"display(\n    scatter(\n        population.position,\n        c = map(s -> EpiSiming.phase_colors[s], population.phase),\n        markersize = 1,\n        markerstrokecolor = :auto,\n        label = false,\n        xlabel = \"km\",\n        ylabel = \"km\",\n        title = \"Population\",\n        titlefont = 10\n    )\n)\n\ndisplay(\n    scatter(\n        filter(p -> (3.0 < first(p) < 4.0) & (1.0 < last(p) < 2.0), population.position),\n        c = map(\n            n -> EpiSiming.phase_colors[population.phase[n]],\n            filter(\n                n -> (3.0 < first(population.position[n]) < 4.0) &\n                    (1.0 < last(population.position[n]) < 2.0),\n                    eachindex(population.position)\n            )\n        ),\n        markersize = 4,\n        markerstrokecolor = :auto,\n        xlabel = \"km\",\n        ylabel = \"km\",\n        label = false,\n        title = \"Population\",\n        titlefont = 10\n    )\n)\n\ndisplay(\n    scatter(\n        filter(p -> (3.2 < first(p) < 3.8) & (1.2 < last(p) < 1.8), population.position),\n        c = map(\n            n -> EpiSiming.phase_colors[population.phase[n]],\n            filter(\n                n -> (3.2 < first(population.position[n]) < 3.8) &\n                    (1.2 < last(population.position[n]) < 1.8),\n                    eachindex(population.position)\n            )\n        ),\n        markersize = 4,\n        markerstrokecolor = :auto,\n        xlabel = \"km\",\n        ylabel = \"km\",\n        label = false,\n        title = \"Population\",\n        titlefont = 10\n    )\n)\n\ndisplay(\n    scatter!(\n        filter( p -> (3.2 ≤ first(p) ≤ 3.8) && (1.2 ≤ last(p) ≤ 1.8), residences.position),\n        markersize = 4,\n        markerstrokecolor = :auto,\n        color = :green,\n        label = false,\n        xlabel = \"km\",\n        ylabel = \"km\",\n        title = \"Residences\",\n        titlefont = 10\n    )\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"examples/random_scenario.html#Generate-clusters","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Generate clusters","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"max_size = 100\nα = 1.8\n\nclusters = Dict{Symbol, Vector{Vector{Int}}}()\n\npush!(\n    clusters,\n    :work_places => EpiSiming.gen_clusters(\n        rng,\n        filter(n -> population.age[n] ≥ 18, 1:num_population),\n        max_size,\n        α\n    )\n)\n\npush!(\n    clusters,\n    :school_places => EpiSiming.gen_clusters(\n        rng,\n        filter(n -> population.age[n] < 20, 1:num_population),\n        max_size,\n        α\n    )\n)\n\nfor (k, v) in clusters\n    for (i, r) in enumerate(v)\n        for n in r\n            push!(population.clusters[n], k => i)\n        end\n    end\nend","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Visualizations","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"plt = histogram(\n    length.(clusters[:work_places]),\n    bins = max_size,\n    xlabel = \"work size\",\n    ylabel = \"number of work places\",\n    label = \"generated\",\n    title = \"Distribution of work places according to size\",\n    titlefont = 10\n)\nplot!(\n    plt,\n    length(clusters[:work_places]) * EpiSiming.decay.(1:max_size, α) / sum(EpiSiming.decay.(1:max_size, α)),\n    linewidth = 2,\n    label = \"target\"\n)\ndisplay(plt)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: )","category":"page"},{"location":"examples/random_scenario.html#Evolution-of-the-epidemics","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Evolution of the epidemics","text":"","category":"section"},{"location":"examples/random_scenario.html#Initial-infection","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Initial infection","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"num_exposed_at_time_0 = div(num_population, 500) # ( 1/500 = 0.002 = 0.2%) 20 for 10_000\n\nexposed_at_time_0 = sample(rng, 1:num_population, num_exposed_at_time_0, replace = false)\n\n# population.phase[exposed_at_time_0] .= EXPOSED\nfor n in exposed_at_time_0\n    population.phase[n] = EXPOSED\n    next_phase, next_change = EpiSiming.transition_rules(rng, EXPOSED, 1)\n    population.next_transition[n] = (next_phase, next_change)\nend","category":"page"},{"location":"examples/random_scenario.html#Evolution-parameters","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Evolution parameters","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"num_steps = 360\ntime_step = 1","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"1","category":"page"},{"location":"examples/random_scenario.html#Time-evolution","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Time evolution","text":"","category":"section"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"@time evolution = EpiSiming.evolve!(\n    rng,\n    population,\n    residences,\n    clusters,\n    τ,\n    γ,\n    prob,\n    num_steps,\n    time_step,\n    verbose_step = 10\n)\n\n@time summary = EpiSiming.get_summary(evolution)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"1.559234 seconds (367.95 k allocations: 61.696 MiB, 2.46% gc time, 11.73%\n compilation time)\n  0.215873 seconds (2 allocations: 19.766 KiB)\n360×7 Matrix{Int64}:\n 9980  20   0   0     0    0  0\n 9980  18   0   2     0    0  0\n 9979  18   1   2     0    0  0\n 9977  18   2   3     0    0  0\n 9975  16   5   4     0    0  0\n 9973  12  11   4     0    0  0\n 9971   8  14   7     0    0  0\n 9965  11  14  10     0    0  0\n 9957  17  16  10     0    0  0\n 9949  24  17  10     0    0  0\n    ⋮                      ⋮  \n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0\n 1987   0   0   0  7872  141  0","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"Visualizations","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"display(\n    plot(\n        summary[:, 2:end],\n        labels = string.(reduce(hcat, EpiSiming.phaselist[2:end])),\n        legend = :left,\n        xlabel = \"day\",\n        ylabel = \"cases\",\n        title = \"time evolution of cases\",\n        titlefont = 10\n    )\n)\n\ndisplay(\n    plot(\n        summary[:, [2, 3, 4, 6]],\n        labels = string.(reduce(hcat, EpiSiming.phaselist[[2, 3, 4, 6]])),\n        legend = :right,\n        xlabel = \"day\",\n        ylabel = \"cases\",\n        title = \"time evolution of cases\",\n        titlefont = 10\n    )\n)","category":"page"},{"location":"examples/random_scenario.html","page":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","title":"Epidemic simulation via a discrete-time, agent-based stochastic model with a random scenario","text":"(Image: ) (Image: )","category":"page"},{"location":"api.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"","category":"page"},{"location":"structures.html","page":"Structures","title":"Structures","text":"CurrentModule = EpiSiming","category":"page"},{"location":"structures.html#Structures","page":"Structures","title":"Structures","text":"","category":"section"},{"location":"structures.html#Epidemic-phases-for-an-individual","page":"Structures","title":"Epidemic phases for an individual","text":"","category":"section"},{"location":"structures.html","page":"Structures","title":"Structures","text":"We define a type to hold the epidemic phase of an individual (e.g. asymptotic, exposed, infected, recovered, and so on). This type is defined as a primitive type which uses a single byte (8 bits), in order to reduce the memory usage. That is the smallest possible size for a primitive type. Even Bools are 8 bits. The only information entity that uses less memory is BitVector, but that is a Vector, not a singleton, and is not very performant for random access; it is more suitable for sequential access.","category":"page"},{"location":"structures.html","page":"Structures","title":"Structures","text":"We could have used straight Int8 to represent the phases of the disease, but defining a new type has the advantage of allowing us to overload Base.show to display the phase in a more friendly and recognizable way. So, the SUSCEPTIBLE state can be displayed as \"SUSCEPTIBLE\" or \"S\", instead of say \"0\" or \"1\". Imagine figuring out whether \"5\" is RECOVERED, DECEASED or something else.","category":"page"},{"location":"structures.html","page":"Structures","title":"Structures","text":"Phase","category":"page"},{"location":"structures.html#EpiSiming.Phase","page":"Structures","title":"EpiSiming.Phase","text":"primitive type Phase <: Number 8 end\n\nPhase is a primitive subtype of Number with 8 bits, representing the different phases, or stages, of a disease, for a given individual. The following phases are defined as (global) constants:\n\nSUSCEPTIBLE = Phase(0)\nEXPOSED = Phase(1)\nINFECTED = Phase(2)\nASYMPTOMATIC = Phase(3)\nRECOVERED = Phase(4)\nDECEASED = Phase(5)\n\n\n\n\n\n","category":"type"},{"location":"structures.html#Residences","page":"Structures","title":"Residences","text":"","category":"section"},{"location":"structures.html","page":"Structures","title":"Structures","text":"Residences","category":"page"},{"location":"structures.html#EpiSiming.Residences","page":"Structures","title":"EpiSiming.Residences","text":"Residences{T, S} <: AbstractVector{Tuple{T, S}}\n\nResidences structure with the following fields:\n\nblock::Vector{T}\nposition::Vector{Tuple{S, S}}\nnum_residents::Vector{T}\nresidents::Vector{Vector{T}}\n\nUsually, T is an Int and S is a floating point type.\n\n\n\n\n\n","category":"type"},{"location":"structures.html#Population","page":"Structures","title":"Population","text":"","category":"section"},{"location":"structures.html","page":"Structures","title":"Structures","text":"Population","category":"page"},{"location":"structures.html#EpiSiming.Population","page":"Structures","title":"EpiSiming.Population","text":"struct Population{R, S, T, U, V, W, X} <: AbstractVector{Tuple{{R, S, T, U, V, W, X}}}\n\nPopulation structure with the following fields:\n\nphase::Vector{R}\npast_transition::Vector{S}\nnext_transition::Vector{Tuple{R, S}}\nresidence::Vector{T}\nposition::Vector{Tuple{U, U}}\nage::Vector{V}\nsusceptibility::Vector{W}\ninfectivity::Vector{W}\nclusters::Vector{Dict{X, T}}\nnetworks::Vector{Dict{X, T}}\n\nUsually, R=Phase, S=Int, T=U=Int, U=W=Float64, X=Symbol. If is a huge population and memory is critical, one can set S=Int16, U=Float16, V=Int8, W=Float16, X=Int8.\n\n\n\n\n\n","category":"type"},{"location":"structures.html#Clusters","page":"Structures","title":"Clusters","text":"","category":"section"},{"location":"structures.html","page":"Structures","title":"Structures","text":"Clusters","category":"page"},{"location":"structures.html#EpiSiming.Clusters","page":"Structures","title":"EpiSiming.Clusters","text":"struct Clusters{R, S, T, U}\n\nClusters structure with the following fields:\n\nid::R\nname::S\ncontact_rate::T\nclusters::Vector{Vector{U}}\n\n\n\n\n\n","category":"type"},{"location":"structures.html#Networks","page":"Structures","title":"Networks","text":"","category":"section"},{"location":"structures.html","page":"Structures","title":"Structures","text":"This has not been implemented yet.","category":"page"},{"location":"structures.html","page":"Structures","title":"Structures","text":"Networks","category":"page"},{"location":"structures.html#EpiSiming.Networks","page":"Structures","title":"EpiSiming.Networks","text":"struct Networks\n\nStructure for the set of networks\n\n\n\n\n\n","category":"type"},{"location":"structures.html#Scenario","page":"Structures","title":"Scenario","text":"","category":"section"},{"location":"structures.html","page":"Structures","title":"Structures","text":"This is not being used yet and its fields have not been defined in a suitable way.","category":"page"},{"location":"structures.html","page":"Structures","title":"Structures","text":"Scenario","category":"page"},{"location":"structures.html#EpiSiming.Scenario","page":"Structures","title":"EpiSiming.Scenario","text":"Structure for the Scenario, with the following fields:\n\nname::String\ninfo::String\nnum_population::Int\npopulation::Population\nresidences::Residences\nressizedistribution::StatsBase.Weights{Float64, Float64, Vector{Float64}}\npop_pyramid::StatsBase.Weights{Float64, Float64, Vector{Float64}}\nΓ_susceptibility::NamedTuple{(:shape, :scale), Tuple{Float64, Float64}}\nΓ_infectivity::NamedTuple{(:shape, :scale), Tuple{Float64, Float64}}\ncontact_rate::NamedTuple{(:residences, :general), Tuple{Float64, Float64}}\nrecovery_rate::NamedTuple{     (:exposed, :infected, :asymptomatic),     Tuple{Float64, Float64, Float64} }\n\n\n\n\n\n","category":"type"},{"location":"examples.html#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"Check out the following examples:","category":"page"},{"location":"examples.html","page":"Examples","title":"Examples","text":"Pages = [\n    \"examples/random_scenario.md\"\n]\nDepth = 1","category":"page"},{"location":"examples.html#Random-Scenario","page":"Examples","title":"Random Scenario","text":"","category":"section"},{"location":"examples.html","page":"Examples","title":"Examples","text":"EpiSiming.gen_random_pop_blocks","category":"page"},{"location":"examples.html#EpiSiming.gen_random_pop_blocks","page":"Examples","title":"EpiSiming.gen_random_pop_blocks","text":"Given a number for the total population and a tuple with a rectangular area made of square blocks, randomly distribute the population among the blocks.\n\n\n\n\n\n","category":"function"},{"location":"evolution.html#Evolution","page":"Evolution","title":"Evolution","text":"","category":"section"},{"location":"evolution.html","page":"Evolution","title":"Evolution","text":"EpiSiming.force_of_infection!","category":"page"},{"location":"evolution.html#EpiSiming.force_of_infection!","page":"Evolution","title":"EpiSiming.force_of_infection!","text":"Compute the force of infection on each individual, i.e. return a vector λ where each λ[i] is the force of infection on the individual with index i.\n\nThe force of infection λ[i] is computed as the sum of the force of infection in each group of direct contacts of the individual, be it their residence, their clusters (e.g. school, workplace), their network neighbors (e.g. friends, neighbors, local shops), and random contact (e.g. commuting, sporadical contacts).\n\nFor each group say i_1, ..., i_n, the associated force of contact is computed as the sum of the infectivity rate for each of the infected individuals, multiplied by the transmission rate in that group and divided by the number n-1 of co-members in the group.\n\n\n\n\n\n","category":"function"},{"location":"evolution.html","page":"Evolution","title":"Evolution","text":"EpiSiming.step_foward!","category":"page"},{"location":"evolution.html#EpiSiming.step_foward!","page":"Evolution","title":"EpiSiming.step_foward!","text":"step_foward!(rng, population, chances, λ, k)\n\nA single step forward, based on the given force of infection λ (already computed with force_of_infection!).\n\nchances is preallocated and is mutated each step with new random numbers.\n\nThe phase transitions from susceptible to exposed depends on the success of\n\n`chances[n] ≤ 1 - exp(-λ[n] * population.susceptibility[n])`\n\nThe transition from the other states are given by [transition_rules](@ref).\n\n\n\n\n\n","category":"function"},{"location":"evolution.html","page":"Evolution","title":"Evolution","text":"EpiSiming.evolve!","category":"page"},{"location":"evolution.html#EpiSiming.evolve!","page":"Evolution","title":"EpiSiming.evolve!","text":"evolve!(\n    rng, population, residences, clusters, τ, num_steps, time_step;\n    verbose_step::Integer = 0\n)\n\nIt essentially loops through [step_foward!](@ref) as many as num_steps times, and returns a sparse array with the transition phases ocurring for each individual.\n\n\n\n\n\n","category":"function"},{"location":"evolution.html","page":"Evolution","title":"Evolution","text":"EpiSiming.get_summary","category":"page"},{"location":"evolution.html#EpiSiming.get_summary","page":"Evolution","title":"EpiSiming.get_summary","text":"get_summary(evolution)\n\nWith m phases (SUSCEPTIBLE, EXPOSED, etc.) and num_steps iterations, get_summary(evolution) returns a num_steps x m matrix of Integers with the population count at each iteration, on each phase.\n\n\n\n\n\n","category":"function"},{"location":"index.html#EpiSiming","page":"Home","title":"EpiSiming","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"This is the Julia version of ModSiming/EpiSiming epidemics simulation package.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"This adaptation to the Julia language is still a work in progress.","category":"page"}]
}
